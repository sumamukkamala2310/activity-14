#include<stdio.h>
#include<string.h>

struct emp
{
char name[20];
int minutes;
float hours;
float h_wage;
float pay;
}

struct emp one_input()
{
struct emp e;
printf("Enter name and hourly wage\n");
scanf("%s%f', &e.name, &e.h_wage);

return e;
}
int find(int n, struct emp e[n], char name[])
{
	for(int i=0;i<n;i++)
	{
	if(!strcmp(name, e[i].name))
	return i;
}
	return 0;
}

void input_n(int n, struct emp e[n])
{
	for(int i=0;i<n;i++)
	e[i]=one_input();
}

void input_timeCards()
{
	int n, min=0, k;
	char name[100];
	printf("Enetr number of time cards:\n");
	scanf("%d", &n);
	struct emp e[n];

	for(int i=0; i<n;i++)
	{
	printf("Enter %d name and minutes worked:\n",i);
	scanf("%s%d", &name, &min);
	k=find(n, e, name);
	e[k].minutes +=min;
        }
}

float compute_hours(float minutes)
{
	return minutes / 60;
}

void one_compute(struct emp*p)
{
	p->hours=compute_hours(p->minutes);
	if(p->hours<=40.00)
	p->pay=p->h_wage*p->hours;
		else
	p->pay=(p->h_wage*40.00)+(1.5*(p->h_wage*(p->hours-40.00)));
}

void n_compute(int n, struct emp e[n])
{
	for(int i=0;i<n;i++)
	one_compute(&e[i]);
}

void one_compute(struct emp*e)
{
	printf("%s:%f hours, $%f\n:->name, e->hours, e->pay);
}

void output_n(int n, struct emp e[n])
{
	for(int i=0;i<n;i++)
	one_output(&e[i]);
}

int main()
{
	int n;
	printf("Enter number of employees:\n");
	scanf("%d", &n);
	struct emp e[n];
	input_n(n,e);
	input_timeCards(n,e);
	n_compute(n,e);
	output_n(n,e);

	return 0;
}
